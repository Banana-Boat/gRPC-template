services:
  mail-service:
    build:
      context: ./mail-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_DATABASE=test

  main-service:
    build:
      context: ./main-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - MIGRATE_DB_URL=mysql://root:12345@tcp(mysql:3306)/test
      # 重写 DB_SOURCE 变量，compose创建network，使两个容器之间可以通过容器名作为ip通信
      - DB_SOURCE=root:12345@tcp(mysql:3306)/test?parseTime=true
      # 重写 MAIL_SERVER_ADDRESS 变量
      - MAIL_SERVICE_ADDRESS=mail-service:8081
    # 通过wait-for.sh脚本，使server在mysql成功运行后再开始运行
    depends_on:
      - mail-service
      - mysql
    # 其中mysql作为ip
    entrypoint: ["/app/wait-for.sh", "mysql:3306", "--", "/app/start.sh"]
    command: ["/app/main"]
